#!/usr/bin/env python3


import configparser
import io
import os
import re
import subprocess
import sys


CREDENTIALS_FILE = os.path.expanduser('~/.aws/credentials')
AWS_SETTING = re.compile(r'''
    (export|SET)
    \s*
    (?P<k>AWS_(ACCESS_KEY_ID|SECRET_ACCESS_KEY|SESSION_TOKEN))
    \s*
    =
    \s*
    "(?P<v>[^"]+)"
    ''', re.VERBOSE)


if len(sys.argv) == 2:
    profile = sys.argv[1]
elif 'AWS_PROFILE' in os.environ:
    profile = os.environ['AWS_PROFILE']
else:
    print('Usage:')
    print('  ' + sys.argv[0])
    print('  ' + sys.argv[0] + ' profile_name')
    print()
    print('If a profile is not specified, it must be in the AWS_PROFILE environment variable.')
    sys.exit(255)


config = configparser.ConfigParser()
config.read(CREDENTIALS_FILE)

if profile not in config.keys():
    config[profile] = {}

if os.path.exists('/dev/clipboard'):
    print("Reading from /dev/clipboard")
    fh = open('/dev/clipboard')
elif os.path.exists('/usr/bin/pbpaste'):
    print("Reading from /usr/bin/pbpaste")
    lines = subprocess.check_output('/usr/bin/pbpaste')
    fh = io.StringIO(lines.decode('utf-8'))
else:
    print("Reading from stdin")
    fh = sys.stdin

for line in fh.readlines():
    line = line.strip()
    match = AWS_SETTING.match(line)
    if match:
        k = match.group('k').lower()
        v = match.group('v')
        config[profile][k] = v

config_file = open(CREDENTIALS_FILE, 'w')
config.write(config_file)
config_file.close()
